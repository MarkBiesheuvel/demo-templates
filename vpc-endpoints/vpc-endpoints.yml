---
AWSTemplateFormatVersion: '2010-09-09'

Description: VPC with VPC endpoints

Parameters:

  CidrRange:
    Type: String
    Default: 10.11.12.0/24

  ImageId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrRange
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}-vpc

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select
        - 0
        - !GetAZs ''
      CidrBlock: !Ref CidrRange
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-subnet

  RouteTableSubnet:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-route-table

  S3VpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - !Ref RouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      VpcId: !Ref Vpc

  DynamoDbVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcEndpointType: Gateway
      VpcId: !Ref Vpc
      RouteTableIds:
        - !Ref RouteTable

  SsmVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      VpcId: !Ref Vpc
      SubnetIds:
        - !Ref Subnet

  SsmMessagesVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      VpcId: !Ref Vpc
      SubnetIds:
        - !Ref Subnet

  Ec2MessagesVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ec2messages
      VpcEndpointType: Interface
      PrivateDnsEnabled: True
      VpcId: !Ref Vpc
      SubnetIds:
        - !Ref Subnet

  Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - SsmVpcEndpoint
      - SsmMessagesVpcEndpoint
      - Ec2MessagesVpcEndpoint
    Properties:
      InstanceType: t3a.nano
      IamInstanceProfile: !Ref InstanceProfile
      SubnetId: !Ref Subnet
      ImageId: !Ref ImageId
      UserData:
        Fn::Base64: !Sub |
            #!/bin/bash -xe
            echo -e "+noall +answer" > /root/.digrc

            mkdir /root/.aws
            echo -e "[default]\nregion = ${AWS::Region}" > /root/.aws/config
      Tags:
        -
          Key: Name
          Value: !Sub ${AWS::StackName}-instance

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref InstanceRole

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: ec2.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/ReadOnlyAccess
